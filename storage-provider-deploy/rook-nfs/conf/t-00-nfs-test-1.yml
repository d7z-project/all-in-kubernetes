## 测试
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-test-rook-nfs
  labels:
    app: rook-nfs
    mode: test
spec:
  storageClassName: 'sc-nfs-share'
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rook-nfs
    mode: test
    role: web-frontend
  name: deploy-test-rook-nfs-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rook-nfs
      mode: test
      role: web-frontend
  template:
    metadata:
      labels:
        app: rook-nfs
        mode: test
        role: web-frontend
    spec:
      containers:
        - name: web
          image: nginx
          ports:
            - name: web
              containerPort: 80
          volumeMounts:
            # name must match the volume name below
            - name: rook-nfs-vol
              mountPath: "/usr/share/nginx/html"
      volumes:
        - name: rook-nfs-vol
          persistentVolumeClaim:
            claimName: pvc-test-rook-nfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rook-nfs
    mode: test
    role: busybox
  name: deploy-test-rook-nfs-busybox
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rook-nfs
      mode: test
      role: busybox
  template:
    metadata:
      labels:
        app: rook-nfs
        mode: test
        role: busybox
    spec:
      containers:
        - image: busybox
          command:
            - sh
            - -c
            - "while true; do date > /mnt/index.html; hostname >> /mnt/index.html; sleep $(($RANDOM % 5 + 5)); done"
          imagePullPolicy: IfNotPresent
          name: busybox
          volumeMounts:
            # name must match the volume name below
            - name: rook-nfs-vol
              mountPath: "/mnt"
      volumes:
        - name: rook-nfs-vol
          persistentVolumeClaim:
            claimName: pvc-test-rook-nfs
---
kind: Service
apiVersion: v1
metadata:
  name: svc-test-rook-nfs
  labels:
    app: rook-nfs
    mode: test
spec:
  ports:
    - port: 80
  selector:
    role: web-frontend
