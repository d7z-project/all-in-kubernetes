apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.1-0.20210420220833-f284e2e8098c
  creationTimestamp: null
  name: nfsservers.nfs.rook.io
spec:
  group: nfs.rook.io
  names:
    kind: NFSServer
    listKind: NFSServerList
    plural: nfsservers
    singular: nfsserver
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - description: NFS Server instance state
          jsonPath: .status.state
          name: State
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: NFSServer is the Schema for the nfsservers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: NFSServerSpec represents the spec of NFS daemon
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description: The annotations-related configuration to add/set on each Pod related object.
                  type: object
                exports:
                  description: The parameters to configure the NFS export
                  items:
                    description: ExportsSpec represents the spec of NFS exports
                    properties:
                      name:
                        description: Name of the export
                        type: string
                      persistentVolumeClaim:
                        description: PVC from which the NFS daemon gets storage for sharing
                        properties:
                          claimName:
                            description: 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            type: string
                          readOnly:
                            description: Will force the ReadOnly setting in VolumeMounts. Default false.
                            type: boolean
                        required:
                          - claimName
                        type: object
                      server:
                        description: The NFS server configuration
                        properties:
                          accessMode:
                            description: Reading and Writing permissions on the export Valid values are "ReadOnly", "ReadWrite" and "none"
                            enum:
                              - ReadOnly
                              - ReadWrite
                              - none
                            type: string
                          allowedClients:
                            description: The clients allowed to access the NFS export
                            items:
                              description: AllowedClientsSpec represents the client specs for accessing the NFS export
                              properties:
                                accessMode:
                                  description: Reading and Writing permissions for the client to access the NFS export Valid values are "ReadOnly", "ReadWrite" and "none" Gets overridden when ServerSpec.accessMode is specified
                                  enum:
                                    - ReadOnly
                                    - ReadWrite
                                    - none
                                  type: string
                                clients:
                                  description: The clients that can access the share Values can be hostname, ip address, netgroup, CIDR network address, or all
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: Name of the clients group
                                  type: string
                                squash:
                                  description: Squash options for clients Valid values are "none", "rootid", "root", and "all" Gets overridden when ServerSpec.squash is specified
                                  enum:
                                    - none
                                    - rootid
                                    - root
                                    - all
                                  type: string
                              type: object
                            type: array
                          squash:
                            description: This prevents the root users connected remotely from having root privileges Valid values are "none", "rootid", "root", and "all"
                            enum:
                              - none
                              - rootid
                              - root
                              - all
                            type: string
                        type: object
                    type: object
                  type: array
                replicas:
                  description: Replicas of the NFS daemon
                  type: integer
              type: object
            status:
              description: NFSServerStatus defines the observed state of NFSServer
              properties:
                message:
                  type: string
                reason:
                  type: string
                state:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: { }
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: [ ]
  storedVersions: [ ]
---
apiVersion: v1
kind: Namespace
metadata:
  name: rook-nfs-system # namespace:operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-nfs-operator
  namespace: rook-nfs-system # namespace:operator
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rook-nfs-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-nfs-operator
subjects:
  - kind: ServiceAccount
    name: rook-nfs-operator
    namespace: rook-nfs-system # namespace:operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rook-nfs-operator
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - get
      - watch
      - create
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - nfs.rook.io
    resources:
      - nfsservers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - nfs.rook.io
    resources:
      - nfsservers/status
      - nfsservers/finalizers
    verbs:
      - get
      - patch
      - update
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rook-nfs-operator
  namespace: rook-nfs-system # namespace:operator
  labels:
    app: rook-nfs-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rook-nfs-operator
  template:
    metadata:
      labels:
        app: rook-nfs-operator
    spec:
      serviceAccountName: rook-nfs-operator
      containers:
        - name: rook-nfs-operator
          image: rook/nfs:v1.7.3
          imagePullPolicy: IfNotPresent
          args: [ "nfs", "operator" ]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: rook-nfs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-nfs-server
  namespace: rook-nfs
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rook-nfs-provisioner-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "create", "delete" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get", "list", "watch", "update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "storageclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "create", "update", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "services", "endpoints" ]
    verbs: [ "get" ]
  - apiGroups: [ "policy" ]
    resources: [ "podsecuritypolicies" ]
    resourceNames: [ "rook-nfs-policy" ]
    verbs: [ "use" ]
  - apiGroups: [ "" ]
    resources: [ "endpoints" ]
    verbs: [ "get", "list", "watch", "create", "update", "patch" ]
  - apiGroups:
      - nfs.rook.io
    resources:
      - "*"
    verbs:
      - "*"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rook-nfs-provisioner-runner
subjects:
  - kind: ServiceAccount
    name:
      rook-nfs-server
    # replace with namespace where provisioner is deployed
    namespace: rook-nfs
roleRef:
  kind: ClusterRole
  name: rook-nfs-provisioner-runner
  apiGroup: rbac.authorization.k8s.io
