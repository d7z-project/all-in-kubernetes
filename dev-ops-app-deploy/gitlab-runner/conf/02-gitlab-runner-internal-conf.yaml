apiVersion: v1
data:
  run.sh: |
    #!/bin/bash
    CONF_PATH="/etc/gitlab-runner"
    unregister() {
        kill %1
        echo "Unregistering runner ${RUNNER_NAME} ..."
        /usr/bin/gitlab-ci-multi-runner unregister -t "$(/usr/bin/gitlab-ci-multi-runner list 2>&1 | tail -n1 | awk '{print $4}' | cut -d'=' -f2)" -n ${RUNNER_NAME}
        exit $?
    }
    cat >>/etc/gitlab-runner/config.toml <<EOF
    EOF
    trap 'unregister' EXIT HUP INT QUIT PIPE TERM
    mkdir -p "$CONF_PATH"/certs
    cp /certs/ca.crt "$CONF_PATH"/certs/
    echo "Registering runner ${RUNNER_NAME} ..."
    /usr/bin/gitlab-ci-multi-runner register -r ${GITLAB_CI_TOKEN}
    sed -i 's/^concurrent.*/concurrent = '"${RUNNER_REQUEST_CONCURRENCY}"'/' "$CONF_PATH"/config.toml
    sed -i "$CONF_PATH"/config.toml -e $'s@\[\[runners\]\]@[[runners]]\\\n environment = ["GIT_SSL_NO_VERIFY=true", "CI_SERVER_TLS_CA_FILE=/etc/gitlab-runner/certs/ca.crt"]@g'
    echo "Starting runner ${RUNNER_NAME} ..."
    /usr/bin/gitlab-ci-multi-runner run -n ${RUNNER_NAME} &
    wait
kind: ConfigMap
metadata:
  labels:
    app: gitlab-ci
  name: conf-gitlab-ci-scripts
  namespace: gitlab-ci
---
apiVersion: v1
data:
  REGISTER_NON_INTERACTIVE: "true"
  REGISTER_LOCKED: "false"
  METRICS_SERVER: "0.0.0.0:9100"
  CI_SERVER_URL: "http://svc-gitlab.core-app.svc.cluster.local/ci"
  RUNNER_REQUEST_CONCURRENCY: "4"
  RUNNER_EXECUTOR: "kubernetes"
  KUBERNETES_NAMESPACE: "gitlab"
  KUBERNETES_PRIVILEGED: "true"
  KUBERNETES_CPU_LIMIT: "3"
  KUBERNETES_MEMORY_LIMIT: "4Gi"
  KUBERNETES_SERVICE_CPU_LIMIT: "3"
  KUBERNETES_SERVICE_MEMORY_LIMIT: "4Gi"
  KUBERNETES_HELPER_CPU_LIMIT: "500m"
  KUBERNETES_HELPER_MEMORY_LIMIT: "500Mi"
  KUBERNETES_PULL_POLICY: "if-not-present"
  KUBERNETES_TERMINATIONGRACEPERIODSECONDS: "10"
  KUBERNETES_POLL_INTERVAL: "5"
  KUBERNETES_POLL_TIMEOUT: "360"
  RUNNER_NAME: "k8s-runner"
kind: ConfigMap
metadata:
  labels:
    app: gitlab-ci
  name: conf-gitlab-ci
  namespace: gitlab-ci
