apiVersion: v1
data:
  default.toml: |
    check_interval = 0

    [session_server]
    listen_address = "[::]:8093"
    advertise_address = "{{pod.address}}:8093"
    session_timeout = 1800


  run.sh: |
    #!/usr/bin/env bash
    export CONF_PATH="/etc/gitlab-runner"
    unregister() {
        kill %1
        echo "Unregistering runner ${RUNNER_NAME} ..."
        GITLAB_TOKEN="$(/usr/bin/gitlab-ci-multi-runner list 2>&1 | tail -n1 | awk '{print $4}' | cut -d'=' -f2)"
        for i in {1..5}; do
            /usr/bin/gitlab-ci-multi-runner unregister -t "${GITLAB_TOKEN}" -n "${RUNNER_NAME}" && break
            if [ "$i" -gt 4 ]; then
                exit 1
            fi
        done
    }
    trap 'unregister' EXIT HUP INT QUIT PIPE TERM
    cp -f /scripts/default.toml "$CONF_PATH"/config.toml
    CURRENT_IP=$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1 | sed 's/\./-/g')
    sed -i -e "s/{{pod.address}}/$CURRENT_IP.$KUBERNETES_NAMESPACE.pod.cluster.local/g"  "$CONF_PATH"/config.toml
    # add gitlab custom cert
    if [ -f /certs/tls.crt ]; then
        export CI_SERVER_TLS_CERT_FILE=/certs/tls.crt
    fi
    if [ -f /certs/ca.crt ]; then
        export CI_SERVER_TLS_CA_FILE=/certs/ca.crt
    fi
    echo "Registering runner ${RUNNER_NAME} ..."
    REGISTER_ARGS=(--env GIT_SSL_NO_VERIFY=true --env DOCKER_HOST=$DOCKER_HOST)
    for i in {1..5}; do
        /usr/bin/gitlab-ci-multi-runner register -r "${GITLAB_CI_TOKEN}" ${REGISTER_ARGS[*]} && break
        if [ "$i" -gt 4 ]; then
            echo "gitlab ci register fail ." 1>&2
            exit 1
        fi
    sleep 5
    done
    sed -i "$CONF_PATH"/config.toml \
        -e 's/^concurrent.*/concurrent = '"${RUNNER_REQUEST_CONCURRENCY}"'/'
    echo "Starting runner ${RUNNER_NAME} ..."
    /usr/bin/gitlab-ci-multi-runner run -n "${RUNNER_NAME}" &
    wait
kind: ConfigMap
metadata:
  labels:
    app: gitlab-ci
  name: conf-gitlab-ci-scripts
  namespace: dev-ops
---
apiVersion: v1
data:
  REGISTER_NON_INTERACTIVE: "true"
  REGISTER_LOCKED: "false"
  METRICS_SERVER: "0.0.0.0:9100"
  CI_SERVER_URL: "http://svc-gitlab.core-app.svc.cluster.local/ci"
  DOCKER_HOST: "tcp://svc-docker-dind.dev-ops.svc.cluster.local:2375"
  RUNNER_REQUEST_CONCURRENCY: "4"
  RUNNER_EXECUTOR: "kubernetes"
  KUBERNETES_NAMESPACE: "dev-ops"
  KUBERNETES_PRIVILEGED: "true"
  KUBERNETES_CPU_LIMIT: "3"
  KUBERNETES_MEMORY_LIMIT: "4Gi"
  KUBERNETES_SERVICE_CPU_LIMIT: "3"
  KUBERNETES_SERVICE_MEMORY_LIMIT: "4Gi"
  KUBERNETES_HELPER_CPU_LIMIT: "500m"
  KUBERNETES_HELPER_MEMORY_LIMIT: "500Mi"
  KUBERNETES_PULL_POLICY: "always"
  KUBERNETES_TERMINATIONGRACEPERIODSECONDS: "10"
  KUBERNETES_POLL_INTERVAL: "5"
  KUBERNETES_POLL_TIMEOUT: "360"
  RUNNER_NAME: "runner-kubernetes"
kind: ConfigMap
metadata:
  labels:
    app: gitlab-ci
  name: conf-gitlab-ci
  namespace: dev-ops
